// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/plugin/command/proto/command.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandQuery struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandQuery) Reset()         { *m = CommandQuery{} }
func (m *CommandQuery) String() string { return proto.CompactTextString(m) }
func (*CommandQuery) ProtoMessage()    {}
func (*CommandQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cddb51a05920a79, []int{0}
}

func (m *CommandQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandQuery.Unmarshal(m, b)
}
func (m *CommandQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandQuery.Marshal(b, m, deterministic)
}
func (m *CommandQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandQuery.Merge(m, src)
}
func (m *CommandQuery) XXX_Size() int {
	return xxx_messageInfo_CommandQuery.Size(m)
}
func (m *CommandQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CommandQuery proto.InternalMessageInfo

type CommandInfo struct {
	Use                  string         `protobuf:"bytes,1,opt,name=use,proto3" json:"use,omitempty"`
	Short                string         `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	TraverseChildren     bool           `protobuf:"varint,3,opt,name=traverseChildren,proto3" json:"traverseChildren,omitempty"`
	SilenceUsage         bool           `protobuf:"varint,4,opt,name=silenceUsage,proto3" json:"silenceUsage,omitempty"`
	Subcommands          []*CommandInfo `protobuf:"bytes,5,rep,name=subcommands,proto3" json:"subcommands,omitempty"`
	ExecutePath          []string       `protobuf:"bytes,6,rep,name=executePath,proto3" json:"executePath,omitempty"`
	ArgsFunc             bool           `protobuf:"varint,7,opt,name=argsFunc,proto3" json:"argsFunc,omitempty"`
	RunFunc              bool           `protobuf:"varint,8,opt,name=runFunc,proto3" json:"runFunc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommandInfo) Reset()         { *m = CommandInfo{} }
func (m *CommandInfo) String() string { return proto.CompactTextString(m) }
func (*CommandInfo) ProtoMessage()    {}
func (*CommandInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cddb51a05920a79, []int{1}
}

func (m *CommandInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandInfo.Unmarshal(m, b)
}
func (m *CommandInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandInfo.Marshal(b, m, deterministic)
}
func (m *CommandInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandInfo.Merge(m, src)
}
func (m *CommandInfo) XXX_Size() int {
	return xxx_messageInfo_CommandInfo.Size(m)
}
func (m *CommandInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommandInfo proto.InternalMessageInfo

func (m *CommandInfo) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *CommandInfo) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *CommandInfo) GetTraverseChildren() bool {
	if m != nil {
		return m.TraverseChildren
	}
	return false
}

func (m *CommandInfo) GetSilenceUsage() bool {
	if m != nil {
		return m.SilenceUsage
	}
	return false
}

func (m *CommandInfo) GetSubcommands() []*CommandInfo {
	if m != nil {
		return m.Subcommands
	}
	return nil
}

func (m *CommandInfo) GetExecutePath() []string {
	if m != nil {
		return m.ExecutePath
	}
	return nil
}

func (m *CommandInfo) GetArgsFunc() bool {
	if m != nil {
		return m.ArgsFunc
	}
	return false
}

func (m *CommandInfo) GetRunFunc() bool {
	if m != nil {
		return m.RunFunc
	}
	return false
}

type Arguments struct {
	Path                 []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Arguments) Reset()         { *m = Arguments{} }
func (m *Arguments) String() string { return proto.CompactTextString(m) }
func (*Arguments) ProtoMessage()    {}
func (*Arguments) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cddb51a05920a79, []int{2}
}

func (m *Arguments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arguments.Unmarshal(m, b)
}
func (m *Arguments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arguments.Marshal(b, m, deterministic)
}
func (m *Arguments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arguments.Merge(m, src)
}
func (m *Arguments) XXX_Size() int {
	return xxx_messageInfo_Arguments.Size(m)
}
func (m *Arguments) XXX_DiscardUnknown() {
	xxx_messageInfo_Arguments.DiscardUnknown(m)
}

var xxx_messageInfo_Arguments proto.InternalMessageInfo

func (m *Arguments) GetPath() []string {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Arguments) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type Result struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cddb51a05920a79, []int{3}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CommandQuery)(nil), "proto.CommandQuery")
	proto.RegisterType((*CommandInfo)(nil), "proto.CommandInfo")
	proto.RegisterType((*Arguments)(nil), "proto.Arguments")
	proto.RegisterType((*Result)(nil), "proto.Result")
}

func init() {
	proto.RegisterFile("pkg/plugin/command/proto/command.proto", fileDescriptor_3cddb51a05920a79)
}

var fileDescriptor_3cddb51a05920a79 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0xd3, 0x3f, 0xe9, 0xa4, 0x4a, 0x19, 0x3d, 0x2c, 0x3d, 0x85, 0x1c, 0x6a, 0xf0,
	0xd0, 0x42, 0xeb, 0x0b, 0x94, 0x8a, 0xe0, 0x4d, 0x03, 0x3e, 0x40, 0x9a, 0x8e, 0x69, 0x30, 0xdd,
	0x84, 0x9d, 0x5d, 0xd1, 0xa7, 0xf0, 0xe0, 0x0b, 0x4b, 0x36, 0x69, 0x69, 0x51, 0xf0, 0xb4, 0xf3,
	0xfd, 0x66, 0xf8, 0xe6, 0x1b, 0x16, 0xa6, 0xd5, 0x5b, 0x36, 0xaf, 0x0a, 0x93, 0xe5, 0x72, 0x9e,
	0x96, 0xfb, 0x7d, 0x22, 0xb7, 0xf3, 0x4a, 0x95, 0xba, 0x3c, 0xa8, 0x99, 0x55, 0xd8, 0xb3, 0x4f,
	0x78, 0x09, 0xa3, 0x75, 0xc3, 0x9f, 0x0d, 0xa9, 0xcf, 0xf0, 0xbb, 0x03, 0x7e, 0x0b, 0x1e, 0xe5,
	0x6b, 0x89, 0x63, 0x70, 0x0d, 0x93, 0x70, 0x02, 0x27, 0x1a, 0xc6, 0x75, 0x89, 0xd7, 0xd0, 0xe3,
	0x5d, 0xa9, 0xb4, 0xe8, 0x58, 0xd6, 0x08, 0xbc, 0x85, 0xb1, 0x56, 0xc9, 0x3b, 0x29, 0xa6, 0xf5,
	0x2e, 0x2f, 0xb6, 0x8a, 0xa4, 0x70, 0x03, 0x27, 0xf2, 0xe2, 0x5f, 0x1c, 0x43, 0x18, 0x71, 0x5e,
	0x90, 0x4c, 0xe9, 0x85, 0x93, 0x8c, 0x44, 0xd7, 0xce, 0x9d, 0x31, 0xbc, 0x03, 0x9f, 0xcd, 0xa6,
	0x8d, 0xcc, 0xa2, 0x17, 0xb8, 0x91, 0xbf, 0xc0, 0x26, 0xfb, 0xec, 0x24, 0x60, 0x7c, 0x3a, 0x86,
	0x01, 0xf8, 0xf4, 0x41, 0xa9, 0xd1, 0xf4, 0x94, 0xe8, 0x9d, 0xe8, 0x07, 0x6e, 0x34, 0x8c, 0x4f,
	0x11, 0x4e, 0xc0, 0x4b, 0x54, 0xc6, 0x0f, 0x46, 0xa6, 0x62, 0x60, 0xf7, 0x1e, 0x35, 0x0a, 0x18,
	0x28, 0x23, 0x6d, 0xcb, 0xb3, 0xad, 0x83, 0x0c, 0x97, 0x30, 0x5c, 0xa9, 0xcc, 0xec, 0x49, 0x6a,
	0x46, 0x84, 0x6e, 0x55, 0xbb, 0x3b, 0xd6, 0xdd, 0xd6, 0x35, 0xab, 0x6d, 0x44, 0xa7, 0x61, 0x75,
	0x1d, 0x7a, 0xd0, 0x8f, 0x89, 0x4d, 0xa1, 0x17, 0x5f, 0x0e, 0x0c, 0xda, 0xcc, 0xb8, 0x04, 0xef,
	0x9e, 0x38, 0x55, 0xf9, 0x86, 0xf0, 0xea, 0xfc, 0x1e, 0xfb, 0x03, 0x93, 0x3f, 0x8e, 0xc4, 0x29,
	0xb8, 0xb1, 0x91, 0x38, 0x6e, 0x5b, 0xc7, 0x2c, 0x93, 0x8b, 0x96, 0x34, 0x8b, 0xf0, 0x06, 0xba,
	0x2b, 0x95, 0xf1, 0xbf, 0x83, 0x9b, 0xbe, 0x55, 0xcb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f,
	0x17, 0x06, 0x76, 0x2e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommandClient is the client API for Command service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandClient interface {
	Describe(ctx context.Context, in *CommandQuery, opts ...grpc.CallOption) (*CommandInfo, error)
	Run(ctx context.Context, in *Arguments, opts ...grpc.CallOption) (*Result, error)
	Args(ctx context.Context, in *Arguments, opts ...grpc.CallOption) (*Result, error)
}

type commandClient struct {
	cc grpc.ClientConnInterface
}

func NewCommandClient(cc grpc.ClientConnInterface) CommandClient {
	return &commandClient{cc}
}

func (c *commandClient) Describe(ctx context.Context, in *CommandQuery, opts ...grpc.CallOption) (*CommandInfo, error) {
	out := new(CommandInfo)
	err := c.cc.Invoke(ctx, "/proto.Command/Describe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) Run(ctx context.Context, in *Arguments, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.Command/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) Args(ctx context.Context, in *Arguments, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/proto.Command/Args", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandServer is the server API for Command service.
type CommandServer interface {
	Describe(context.Context, *CommandQuery) (*CommandInfo, error)
	Run(context.Context, *Arguments) (*Result, error)
	Args(context.Context, *Arguments) (*Result, error)
}

// UnimplementedCommandServer can be embedded to have forward compatible implementations.
type UnimplementedCommandServer struct {
}

func (*UnimplementedCommandServer) Describe(ctx context.Context, req *CommandQuery) (*CommandInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Describe not implemented")
}
func (*UnimplementedCommandServer) Run(ctx context.Context, req *Arguments) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedCommandServer) Args(ctx context.Context, req *Arguments) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Args not implemented")
}

func RegisterCommandServer(s *grpc.Server, srv CommandServer) {
	s.RegisterService(&_Command_serviceDesc, srv)
}

func _Command_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Command/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Describe(ctx, req.(*CommandQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Arguments)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Command/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Run(ctx, req.(*Arguments))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_Args_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Arguments)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Args(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Command/Args",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Args(ctx, req.(*Arguments))
	}
	return interceptor(ctx, in, info, handler)
}

var _Command_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Command",
	HandlerType: (*CommandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Describe",
			Handler:    _Command_Describe_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _Command_Run_Handler,
		},
		{
			MethodName: "Args",
			Handler:    _Command_Args_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/plugin/command/proto/command.proto",
}
