// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/types/types.proto

package types

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ContainerId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerId) Reset()         { *m = ContainerId{} }
func (m *ContainerId) String() string { return proto.CompactTextString(m) }
func (*ContainerId) ProtoMessage()    {}
func (*ContainerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{1}
}

func (m *ContainerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerId.Unmarshal(m, b)
}
func (m *ContainerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerId.Marshal(b, m, deterministic)
}
func (m *ContainerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerId.Merge(m, src)
}
func (m *ContainerId) XXX_Size() int {
	return xxx_messageInfo_ContainerId.Size(m)
}
func (m *ContainerId) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerId.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerId proto.InternalMessageInfo

func (m *ContainerId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ContainerBox struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Height               uint32   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width                uint32   `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerBox) Reset()         { *m = ContainerBox{} }
func (m *ContainerBox) String() string { return proto.CompactTextString(m) }
func (*ContainerBox) ProtoMessage()    {}
func (*ContainerBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{2}
}

func (m *ContainerBox) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerBox.Unmarshal(m, b)
}
func (m *ContainerBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerBox.Marshal(b, m, deterministic)
}
func (m *ContainerBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerBox.Merge(m, src)
}
func (m *ContainerBox) XXX_Size() int {
	return xxx_messageInfo_ContainerBox.Size(m)
}
func (m *ContainerBox) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerBox.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerBox proto.InternalMessageInfo

func (m *ContainerBox) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContainerBox) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ContainerBox) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

type ContainerConfig struct {
	Config               *Backdrop `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Tty                  bool      `protobuf:"varint,2,opt,name=tty,proto3" json:"tty,omitempty"`
	Stdio                bool      `protobuf:"varint,3,opt,name=stdio,proto3" json:"stdio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ContainerConfig) Reset()         { *m = ContainerConfig{} }
func (m *ContainerConfig) String() string { return proto.CompactTextString(m) }
func (*ContainerConfig) ProtoMessage()    {}
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{3}
}

func (m *ContainerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerConfig.Unmarshal(m, b)
}
func (m *ContainerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerConfig.Marshal(b, m, deterministic)
}
func (m *ContainerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerConfig.Merge(m, src)
}
func (m *ContainerConfig) XXX_Size() int {
	return xxx_messageInfo_ContainerConfig.Size(m)
}
func (m *ContainerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerConfig proto.InternalMessageInfo

func (m *ContainerConfig) GetConfig() *Backdrop {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ContainerConfig) GetTty() bool {
	if m != nil {
		return m.Tty
	}
	return false
}

func (m *ContainerConfig) GetStdio() bool {
	if m != nil {
		return m.Stdio
	}
	return false
}

type Backdrop struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Aliases              []string       `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty"`
	ContainerName        string         `protobuf:"bytes,3,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	ImageId              string         `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Entrypoint           *Entrypoint    `protobuf:"bytes,5,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Environment          []*Environment `protobuf:"bytes,6,rep,name=environment,proto3" json:"environment,omitempty"`
	Volumes              []*Volume      `protobuf:"bytes,7,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Devices              []*Device      `protobuf:"bytes,8,rep,name=devices,proto3" json:"devices,omitempty"`
	Ports                []*Port        `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`
	User                 string         `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	WorkingDir           string         `protobuf:"bytes,11,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Backdrop) Reset()         { *m = Backdrop{} }
func (m *Backdrop) String() string { return proto.CompactTextString(m) }
func (*Backdrop) ProtoMessage()    {}
func (*Backdrop) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{4}
}

func (m *Backdrop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Backdrop.Unmarshal(m, b)
}
func (m *Backdrop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Backdrop.Marshal(b, m, deterministic)
}
func (m *Backdrop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Backdrop.Merge(m, src)
}
func (m *Backdrop) XXX_Size() int {
	return xxx_messageInfo_Backdrop.Size(m)
}
func (m *Backdrop) XXX_DiscardUnknown() {
	xxx_messageInfo_Backdrop.DiscardUnknown(m)
}

var xxx_messageInfo_Backdrop proto.InternalMessageInfo

func (m *Backdrop) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Backdrop) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *Backdrop) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *Backdrop) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Backdrop) GetEntrypoint() *Entrypoint {
	if m != nil {
		return m.Entrypoint
	}
	return nil
}

func (m *Backdrop) GetEnvironment() []*Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *Backdrop) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Backdrop) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *Backdrop) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Backdrop) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Backdrop) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

type Entrypoint struct {
	Interactive          bool     `protobuf:"varint,1,opt,name=interactive,proto3" json:"interactive,omitempty"`
	Script               string   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Interpreter          []string `protobuf:"bytes,3,rep,name=interpreter,proto3" json:"interpreter,omitempty"`
	Arguments            []string `protobuf:"bytes,4,rep,name=arguments,proto3" json:"arguments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entrypoint) Reset()         { *m = Entrypoint{} }
func (m *Entrypoint) String() string { return proto.CompactTextString(m) }
func (*Entrypoint) ProtoMessage()    {}
func (*Entrypoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{5}
}

func (m *Entrypoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entrypoint.Unmarshal(m, b)
}
func (m *Entrypoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entrypoint.Marshal(b, m, deterministic)
}
func (m *Entrypoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entrypoint.Merge(m, src)
}
func (m *Entrypoint) XXX_Size() int {
	return xxx_messageInfo_Entrypoint.Size(m)
}
func (m *Entrypoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Entrypoint.DiscardUnknown(m)
}

var xxx_messageInfo_Entrypoint proto.InternalMessageInfo

func (m *Entrypoint) GetInteractive() bool {
	if m != nil {
		return m.Interactive
	}
	return false
}

func (m *Entrypoint) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *Entrypoint) GetInterpreter() []string {
	if m != nil {
		return m.Interpreter
	}
	return nil
}

func (m *Entrypoint) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type Environment struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Environment) Reset()         { *m = Environment{} }
func (m *Environment) String() string { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()    {}
func (*Environment) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{6}
}

func (m *Environment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Environment.Unmarshal(m, b)
}
func (m *Environment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Environment.Marshal(b, m, deterministic)
}
func (m *Environment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environment.Merge(m, src)
}
func (m *Environment) XXX_Size() int {
	return xxx_messageInfo_Environment.Size(m)
}
func (m *Environment) XXX_DiscardUnknown() {
	xxx_messageInfo_Environment.DiscardUnknown(m)
}

var xxx_messageInfo_Environment proto.InternalMessageInfo

func (m *Environment) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Environment) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Volume struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Readonly             bool     `protobuf:"varint,3,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{7}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Volume) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Volume) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type Device struct {
	CgroupRule           string   `protobuf:"bytes,1,opt,name=cgroup_rule,json=cgroupRule,proto3" json:"cgroup_rule,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Permissions          string   `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{8}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetCgroupRule() string {
	if m != nil {
		return m.CgroupRule
	}
	return ""
}

func (m *Device) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Device) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Device) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

type Port struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Published            string   `protobuf:"bytes,2,opt,name=published,proto3" json:"published,omitempty"`
	Protocol             string   `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	HostIp               string   `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{9}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Port) GetPublished() string {
	if m != nil {
		return m.Published
	}
	return ""
}

func (m *Port) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Port) GetHostIp() string {
	if m != nil {
		return m.HostIp
	}
	return ""
}

type Image struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{10}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Image) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Result struct {
	ExitCode             int64    `protobuf:"varint,1,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{11}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetExitCode() int64 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StreamingConnection struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingConnection) Reset()         { *m = StreamingConnection{} }
func (m *StreamingConnection) String() string { return proto.CompactTextString(m) }
func (*StreamingConnection) ProtoMessage()    {}
func (*StreamingConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{12}
}

func (m *StreamingConnection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingConnection.Unmarshal(m, b)
}
func (m *StreamingConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingConnection.Marshal(b, m, deterministic)
}
func (m *StreamingConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingConnection.Merge(m, src)
}
func (m *StreamingConnection) XXX_Size() int {
	return xxx_messageInfo_StreamingConnection.Size(m)
}
func (m *StreamingConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingConnection.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingConnection proto.InternalMessageInfo

func (m *StreamingConnection) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "types.Empty")
	proto.RegisterType((*ContainerId)(nil), "types.ContainerId")
	proto.RegisterType((*ContainerBox)(nil), "types.ContainerBox")
	proto.RegisterType((*ContainerConfig)(nil), "types.ContainerConfig")
	proto.RegisterType((*Backdrop)(nil), "types.Backdrop")
	proto.RegisterType((*Entrypoint)(nil), "types.Entrypoint")
	proto.RegisterType((*Environment)(nil), "types.Environment")
	proto.RegisterType((*Volume)(nil), "types.Volume")
	proto.RegisterType((*Device)(nil), "types.Device")
	proto.RegisterType((*Port)(nil), "types.Port")
	proto.RegisterType((*Image)(nil), "types.Image")
	proto.RegisterType((*Result)(nil), "types.Result")
	proto.RegisterType((*StreamingConnection)(nil), "types.StreamingConnection")
}

func init() {
	proto.RegisterFile("pkg/types/types.proto", fileDescriptor_6579d14f41ea6320)
}

var fileDescriptor_6579d14f41ea6320 = []byte{
	// 849 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x8e, 0xe3, 0x44,
	0x10, 0x56, 0xe2, 0xc9, 0x5f, 0x79, 0x66, 0xb2, 0xf4, 0xc0, 0x62, 0xa2, 0x45, 0x04, 0x4b, 0x68,
	0x46, 0x20, 0x16, 0x91, 0x1d, 0xc4, 0x09, 0x0e, 0x93, 0xdd, 0x43, 0x10, 0x42, 0xab, 0x1e, 0xe0,
	0x1a, 0x79, 0xec, 0xc2, 0x69, 0x8d, 0xdd, 0x6d, 0xba, 0xdb, 0xd9, 0x09, 0xdc, 0xb9, 0xf1, 0x04,
	0xbc, 0x0d, 0x4f, 0x86, 0xfa, 0xc7, 0x1e, 0x27, 0x0a, 0x7f, 0x17, 0xcb, 0xdf, 0x57, 0xf5, 0x75,
	0x55, 0x57, 0x55, 0x17, 0xbc, 0x53, 0xdd, 0xe7, 0x9f, 0xe9, 0x5d, 0x85, 0xca, 0x7d, 0x9f, 0x57,
	0x52, 0x68, 0x41, 0x06, 0x16, 0xc4, 0x23, 0x18, 0xbc, 0x2a, 0x2b, 0xbd, 0x8b, 0xdf, 0x87, 0x70,
	0x29, 0xb8, 0x4e, 0x18, 0x47, 0xb9, 0xca, 0xc8, 0x39, 0xf4, 0x59, 0x16, 0xf5, 0xe6, 0xbd, 0xab,
	0x09, 0xed, 0xb3, 0x2c, 0xfe, 0x16, 0x4e, 0x5b, 0xf3, 0x8d, 0x78, 0x38, 0xb4, 0x93, 0xa7, 0x30,
	0xdc, 0x20, 0xcb, 0x37, 0x3a, 0xea, 0xcf, 0x7b, 0x57, 0x67, 0xd4, 0x23, 0xf2, 0x36, 0x0c, 0xde,
	0xb0, 0x4c, 0x6f, 0xa2, 0xc0, 0xd2, 0x0e, 0xc4, 0x77, 0x30, 0x6d, 0x4f, 0x5b, 0x0a, 0xfe, 0x13,
	0xcb, 0xc9, 0x25, 0x0c, 0x53, 0xfb, 0x67, 0x0f, 0x0d, 0x17, 0xd3, 0xe7, 0x2e, 0xdb, 0x9b, 0x24,
	0xbd, 0xcf, 0xa4, 0xa8, 0xa8, 0x37, 0x93, 0x27, 0x10, 0x68, 0xbd, 0xb3, 0x61, 0xc6, 0xd4, 0xfc,
	0x9a, 0x18, 0x4a, 0x67, 0x4c, 0xd8, 0x18, 0x63, 0xea, 0x40, 0xfc, 0x7b, 0x00, 0xe3, 0x46, 0x4c,
	0x08, 0x9c, 0xf0, 0xa4, 0x44, 0x9f, 0xb0, 0xfd, 0x27, 0x11, 0x8c, 0x92, 0x82, 0x25, 0x0a, 0x55,
	0xd4, 0x9f, 0x07, 0x57, 0x13, 0xda, 0x40, 0xf2, 0x11, 0x9c, 0xa7, 0x4d, 0x7a, 0x6b, 0xab, 0x0b,
	0xac, 0xee, 0xac, 0x65, 0xbf, 0x33, 0x07, 0xbc, 0x07, 0x63, 0x56, 0x26, 0x39, 0xae, 0x59, 0x16,
	0x9d, 0x58, 0x87, 0x91, 0xc5, 0xab, 0x8c, 0x7c, 0x0e, 0x80, 0x5c, 0xcb, 0x5d, 0x25, 0x18, 0xd7,
	0xd1, 0xc0, 0xde, 0xe8, 0x2d, 0x7f, 0xa3, 0x57, 0xad, 0x81, 0x76, 0x9c, 0xc8, 0x35, 0x84, 0xc8,
	0xb7, 0x4c, 0x0a, 0x5e, 0x22, 0xd7, 0xd1, 0x70, 0x1e, 0x5c, 0x85, 0x0b, 0xd2, 0x6a, 0x5a, 0x0b,
	0xed, 0xba, 0x91, 0x4b, 0x18, 0x6d, 0x45, 0x51, 0x97, 0xa8, 0xa2, 0x91, 0x55, 0x9c, 0x79, 0xc5,
	0x8f, 0x96, 0xa5, 0x8d, 0xd5, 0x38, 0x66, 0xb8, 0x65, 0x29, 0xaa, 0x68, 0xbc, 0xe7, 0xf8, 0xd2,
	0xb2, 0xb4, 0xb1, 0x92, 0x0f, 0x61, 0x50, 0x09, 0xa9, 0x55, 0x34, 0xb1, 0x6e, 0xa1, 0x77, 0x7b,
	0x2d, 0xa4, 0xa6, 0xce, 0x62, 0xaa, 0x59, 0x2b, 0x94, 0x11, 0xb8, 0x6a, 0x9a, 0x7f, 0xf2, 0x01,
	0x84, 0x6f, 0x84, 0xbc, 0x67, 0x3c, 0x5f, 0x67, 0x4c, 0x46, 0xa1, 0x35, 0x81, 0xa7, 0x5e, 0x32,
	0x19, 0xff, 0xd6, 0x03, 0x78, 0xbc, 0x3a, 0x99, 0x43, 0xc8, 0xb8, 0x46, 0x99, 0xa4, 0x9a, 0x6d,
	0x5d, 0x63, 0xc6, 0xb4, 0x4b, 0x99, 0x91, 0x52, 0xa9, 0x64, 0x95, 0x1b, 0xa9, 0x09, 0xf5, 0xa8,
	0x55, 0x56, 0x12, 0x35, 0xca, 0x28, 0xb0, 0xbd, 0xeb, 0x52, 0xe4, 0x19, 0x4c, 0x12, 0x99, 0xd7,
	0xa6, 0x40, 0x2a, 0x3a, 0xb1, 0xf6, 0x47, 0x22, 0xfe, 0x02, 0xc2, 0x4e, 0x39, 0xcd, 0x3c, 0xdd,
	0xe3, 0xce, 0x4f, 0x86, 0xf9, 0x35, 0xf3, 0xb4, 0x4d, 0x8a, 0x1a, 0x7d, 0x5c, 0x07, 0xe2, 0xef,
	0x61, 0xe8, 0x6a, 0x6a, 0x13, 0x13, 0xb5, 0x4c, 0x9b, 0x71, 0xf2, 0xc8, 0xf0, 0x3a, 0x91, 0x39,
	0xb6, 0x09, 0x3b, 0x44, 0x66, 0x30, 0x96, 0x98, 0x64, 0x82, 0x17, 0x3b, 0x3f, 0xa2, 0x2d, 0x8e,
	0x7f, 0x85, 0xa1, 0x6b, 0x80, 0x29, 0x60, 0x9a, 0x4b, 0x51, 0x57, 0x6b, 0x59, 0x17, 0xcd, 0xd1,
	0xe0, 0x28, 0x5a, 0x17, 0xdd, 0xb0, 0xfd, 0xbf, 0x09, 0x1b, 0xec, 0x85, 0x9d, 0x43, 0x58, 0xa1,
	0x2c, 0x99, 0x52, 0x4c, 0x70, 0xe5, 0x27, 0xb4, 0x4b, 0xc5, 0x3f, 0xc3, 0x89, 0x69, 0x6b, 0xe7,
	0x84, 0xde, 0xde, 0x09, 0xcf, 0x60, 0x52, 0xd5, 0x77, 0x05, 0x53, 0x1b, 0xcc, 0x7c, 0xd0, 0x47,
	0xc2, 0x5c, 0xcb, 0xae, 0x92, 0x54, 0x14, 0x3e, 0x72, 0x8b, 0xc9, 0xbb, 0x30, 0xda, 0x08, 0xa5,
	0xd7, 0xac, 0xf2, 0x71, 0x87, 0x06, 0xae, 0xaa, 0xf8, 0x13, 0x18, 0xac, 0xcc, 0x1b, 0x39, 0xfa,
	0x22, 0xdd, 0x52, 0xe9, 0xb7, 0x4b, 0xe7, 0x6b, 0x18, 0x52, 0x54, 0x75, 0x61, 0x4b, 0x88, 0x0f,
	0x4c, 0x2f, 0x45, 0xe6, 0x14, 0x01, 0x6d, 0xb1, 0x79, 0xc7, 0x25, 0x2a, 0x95, 0xe4, 0x4d, 0x61,
	0x1a, 0x18, 0x5f, 0xc2, 0xc5, 0xad, 0x96, 0x98, 0x94, 0x8c, 0xe7, 0x4b, 0xc1, 0x39, 0xa6, 0x9a,
	0x09, 0x6e, 0x3a, 0x5e, 0xcb, 0xa2, 0xe9, 0x78, 0x2d, 0x8b, 0xc5, 0x1f, 0x3d, 0x38, 0x73, 0x7b,
	0xa8, 0x96, 0x89, 0xf5, 0x89, 0xe1, 0x64, 0xc5, 0x99, 0x26, 0xa7, 0xcd, 0x03, 0x34, 0x4b, 0x72,
	0xb6, 0x87, 0xc8, 0x97, 0x70, 0xf1, 0x43, 0x95, 0x25, 0x1a, 0xf7, 0xa5, 0x87, 0x9b, 0x6b, 0x76,
	0x48, 0x90, 0x4f, 0x61, 0xf2, 0x5a, 0x8a, 0x2d, 0x33, 0x5d, 0x20, 0xcd, 0x13, 0xef, 0x6c, 0xdf,
	0xfd, 0x38, 0x8b, 0x3f, 0x03, 0x78, 0xd2, 0x5a, 0x69, 0xcd, 0x35, 0x2b, 0xf1, 0x3f, 0x25, 0xf8,
	0x31, 0x9c, 0x52, 0x54, 0xa2, 0xd8, 0xa2, 0xab, 0x79, 0x63, 0xb5, 0x68, 0xb6, 0x87, 0xc8, 0x57,
	0x30, 0x5d, 0x4a, 0x74, 0x97, 0x71, 0x91, 0xc8, 0xd3, 0xc3, 0xcc, 0xdc, 0x3d, 0x67, 0x47, 0x32,
	0x26, 0x0b, 0x38, 0xbf, 0xd5, 0x89, 0xd4, 0x8f, 0xea, 0x7f, 0xbd, 0x17, 0x79, 0x01, 0x53, 0x8a,
	0xa5, 0xd8, 0xe2, 0xff, 0x11, 0x5d, 0x1b, 0x91, 0x62, 0xbf, 0x74, 0x44, 0x17, 0x87, 0xa2, 0x1b,
	0xf1, 0x70, 0xa0, 0xfa, 0x06, 0xa2, 0x5b, 0xd4, 0x75, 0x75, 0x6c, 0x1c, 0x8e, 0xc5, 0x9c, 0x79,
	0xee, 0x98, 0xff, 0x35, 0x4c, 0x1d, 0xfd, 0xcf, 0x69, 0x37, 0xfb, 0xd5, 0x4d, 0xf0, 0xdd, 0xd0,
	0xbe, 0x8d, 0x17, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x29, 0xf0, 0x9d, 0xde, 0x8f, 0x07, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	UpdateConfiguration(ctx context.Context, in *Backdrop, opts ...grpc.CallOption) (*Backdrop, error)
	Provision(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error)
}

type configurationClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigurationClient(cc grpc.ClientConnInterface) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.Configuration/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) UpdateConfiguration(ctx context.Context, in *Backdrop, opts ...grpc.CallOption) (*Backdrop, error) {
	out := new(Backdrop)
	err := c.cc.Invoke(ctx, "/types.Configuration/UpdateConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) Provision(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.Configuration/Provision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	Init(context.Context, *Empty) (*Empty, error)
	UpdateConfiguration(context.Context, *Backdrop) (*Backdrop, error)
	Provision(context.Context, *ContainerId) (*Empty, error)
}

// UnimplementedConfigurationServer can be embedded to have forward compatible implementations.
type UnimplementedConfigurationServer struct {
}

func (*UnimplementedConfigurationServer) Init(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedConfigurationServer) UpdateConfiguration(ctx context.Context, req *Backdrop) (*Backdrop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfiguration not implemented")
}
func (*UnimplementedConfigurationServer) Provision(ctx context.Context, req *ContainerId) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Provision not implemented")
}

func RegisterConfigurationServer(s *grpc.Server, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Configuration/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Init(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_UpdateConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Backdrop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).UpdateConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Configuration/UpdateConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).UpdateConfiguration(ctx, req.(*Backdrop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_Provision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Provision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Configuration/Provision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Provision(ctx, req.(*ContainerId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _Configuration_Init_Handler,
		},
		{
			MethodName: "UpdateConfiguration",
			Handler:    _Configuration_UpdateConfiguration_Handler,
		},
		{
			MethodName: "Provision",
			Handler:    _Configuration_Provision_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}

// ContainerRuntimeClient is the client API for ContainerRuntime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContainerRuntimeClient interface {
	Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	ResolveImage(ctx context.Context, in *Image, opts ...grpc.CallOption) (*Image, error)
	CreateContainer(ctx context.Context, in *ContainerConfig, opts ...grpc.CallOption) (*ContainerId, error)
	StartContainer(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error)
	RemoveContainer(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error)
	ResizeContainer(ctx context.Context, in *ContainerBox, opts ...grpc.CallOption) (*Empty, error)
	SetupStreamingConnection(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*StreamingConnection, error)
	StreamContainer(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Result, error)
}

type containerRuntimeClient struct {
	cc grpc.ClientConnInterface
}

func NewContainerRuntimeClient(cc grpc.ClientConnInterface) ContainerRuntimeClient {
	return &containerRuntimeClient{cc}
}

func (c *containerRuntimeClient) Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) ResolveImage(ctx context.Context, in *Image, opts ...grpc.CallOption) (*Image, error) {
	out := new(Image)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/ResolveImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) CreateContainer(ctx context.Context, in *ContainerConfig, opts ...grpc.CallOption) (*ContainerId, error) {
	out := new(ContainerId)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) StartContainer(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/StartContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) RemoveContainer(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/RemoveContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) ResizeContainer(ctx context.Context, in *ContainerBox, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/ResizeContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) SetupStreamingConnection(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*StreamingConnection, error) {
	out := new(StreamingConnection)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/SetupStreamingConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerRuntimeClient) StreamContainer(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/types.ContainerRuntime/StreamContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContainerRuntimeServer is the server API for ContainerRuntime service.
type ContainerRuntimeServer interface {
	Init(context.Context, *Empty) (*Empty, error)
	ResolveImage(context.Context, *Image) (*Image, error)
	CreateContainer(context.Context, *ContainerConfig) (*ContainerId, error)
	StartContainer(context.Context, *ContainerId) (*Empty, error)
	RemoveContainer(context.Context, *ContainerId) (*Empty, error)
	ResizeContainer(context.Context, *ContainerBox) (*Empty, error)
	SetupStreamingConnection(context.Context, *ContainerId) (*StreamingConnection, error)
	StreamContainer(context.Context, *ContainerId) (*Result, error)
}

// UnimplementedContainerRuntimeServer can be embedded to have forward compatible implementations.
type UnimplementedContainerRuntimeServer struct {
}

func (*UnimplementedContainerRuntimeServer) Init(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedContainerRuntimeServer) ResolveImage(ctx context.Context, req *Image) (*Image, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveImage not implemented")
}
func (*UnimplementedContainerRuntimeServer) CreateContainer(ctx context.Context, req *ContainerConfig) (*ContainerId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedContainerRuntimeServer) StartContainer(ctx context.Context, req *ContainerId) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartContainer not implemented")
}
func (*UnimplementedContainerRuntimeServer) RemoveContainer(ctx context.Context, req *ContainerId) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContainer not implemented")
}
func (*UnimplementedContainerRuntimeServer) ResizeContainer(ctx context.Context, req *ContainerBox) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResizeContainer not implemented")
}
func (*UnimplementedContainerRuntimeServer) SetupStreamingConnection(ctx context.Context, req *ContainerId) (*StreamingConnection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupStreamingConnection not implemented")
}
func (*UnimplementedContainerRuntimeServer) StreamContainer(ctx context.Context, req *ContainerId) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StreamContainer not implemented")
}

func RegisterContainerRuntimeServer(s *grpc.Server, srv ContainerRuntimeServer) {
	s.RegisterService(&_ContainerRuntime_serviceDesc, srv)
}

func _ContainerRuntime_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).Init(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_ResolveImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Image)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).ResolveImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/ResolveImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).ResolveImage(ctx, req.(*Image))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).CreateContainer(ctx, req.(*ContainerConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_StartContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).StartContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/StartContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).StartContainer(ctx, req.(*ContainerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_RemoveContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).RemoveContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/RemoveContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).RemoveContainer(ctx, req.(*ContainerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_ResizeContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerBox)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).ResizeContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/ResizeContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).ResizeContainer(ctx, req.(*ContainerBox))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_SetupStreamingConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).SetupStreamingConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/SetupStreamingConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).SetupStreamingConnection(ctx, req.(*ContainerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerRuntime_StreamContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerRuntimeServer).StreamContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.ContainerRuntime/StreamContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerRuntimeServer).StreamContainer(ctx, req.(*ContainerId))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContainerRuntime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.ContainerRuntime",
	HandlerType: (*ContainerRuntimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _ContainerRuntime_Init_Handler,
		},
		{
			MethodName: "ResolveImage",
			Handler:    _ContainerRuntime_ResolveImage_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _ContainerRuntime_CreateContainer_Handler,
		},
		{
			MethodName: "StartContainer",
			Handler:    _ContainerRuntime_StartContainer_Handler,
		},
		{
			MethodName: "RemoveContainer",
			Handler:    _ContainerRuntime_RemoveContainer_Handler,
		},
		{
			MethodName: "ResizeContainer",
			Handler:    _ContainerRuntime_ResizeContainer_Handler,
		},
		{
			MethodName: "SetupStreamingConnection",
			Handler:    _ContainerRuntime_SetupStreamingConnection_Handler,
		},
		{
			MethodName: "StreamContainer",
			Handler:    _ContainerRuntime_StreamContainer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}
