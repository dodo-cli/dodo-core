// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/types/types.proto

package types

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ContainerId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerId) Reset()         { *m = ContainerId{} }
func (m *ContainerId) String() string { return proto.CompactTextString(m) }
func (*ContainerId) ProtoMessage()    {}
func (*ContainerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{1}
}

func (m *ContainerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerId.Unmarshal(m, b)
}
func (m *ContainerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerId.Marshal(b, m, deterministic)
}
func (m *ContainerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerId.Merge(m, src)
}
func (m *ContainerId) XXX_Size() int {
	return xxx_messageInfo_ContainerId.Size(m)
}
func (m *ContainerId) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerId.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerId proto.InternalMessageInfo

func (m *ContainerId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Backdrop struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Aliases              []string       `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty"`
	ContainerName        string         `protobuf:"bytes,3,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	ImageId              string         `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Entrypoint           *Entrypoint    `protobuf:"bytes,5,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Environment          []*Environment `protobuf:"bytes,6,rep,name=environment,proto3" json:"environment,omitempty"`
	Volumes              []*Volume      `protobuf:"bytes,7,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Devices              []*Device      `protobuf:"bytes,8,rep,name=devices,proto3" json:"devices,omitempty"`
	Ports                []*Port        `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`
	User                 string         `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	WorkingDir           string         `protobuf:"bytes,11,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	Attach               bool           `protobuf:"varint,12,opt,name=attach,proto3" json:"attach,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Backdrop) Reset()         { *m = Backdrop{} }
func (m *Backdrop) String() string { return proto.CompactTextString(m) }
func (*Backdrop) ProtoMessage()    {}
func (*Backdrop) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{2}
}

func (m *Backdrop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Backdrop.Unmarshal(m, b)
}
func (m *Backdrop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Backdrop.Marshal(b, m, deterministic)
}
func (m *Backdrop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Backdrop.Merge(m, src)
}
func (m *Backdrop) XXX_Size() int {
	return xxx_messageInfo_Backdrop.Size(m)
}
func (m *Backdrop) XXX_DiscardUnknown() {
	xxx_messageInfo_Backdrop.DiscardUnknown(m)
}

var xxx_messageInfo_Backdrop proto.InternalMessageInfo

func (m *Backdrop) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Backdrop) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *Backdrop) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *Backdrop) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Backdrop) GetEntrypoint() *Entrypoint {
	if m != nil {
		return m.Entrypoint
	}
	return nil
}

func (m *Backdrop) GetEnvironment() []*Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *Backdrop) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Backdrop) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *Backdrop) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Backdrop) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Backdrop) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *Backdrop) GetAttach() bool {
	if m != nil {
		return m.Attach
	}
	return false
}

type Entrypoint struct {
	Interactive          bool     `protobuf:"varint,1,opt,name=interactive,proto3" json:"interactive,omitempty"`
	Script               string   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Interpreter          []string `protobuf:"bytes,3,rep,name=interpreter,proto3" json:"interpreter,omitempty"`
	Arguments            []string `protobuf:"bytes,4,rep,name=arguments,proto3" json:"arguments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entrypoint) Reset()         { *m = Entrypoint{} }
func (m *Entrypoint) String() string { return proto.CompactTextString(m) }
func (*Entrypoint) ProtoMessage()    {}
func (*Entrypoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{3}
}

func (m *Entrypoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entrypoint.Unmarshal(m, b)
}
func (m *Entrypoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entrypoint.Marshal(b, m, deterministic)
}
func (m *Entrypoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entrypoint.Merge(m, src)
}
func (m *Entrypoint) XXX_Size() int {
	return xxx_messageInfo_Entrypoint.Size(m)
}
func (m *Entrypoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Entrypoint.DiscardUnknown(m)
}

var xxx_messageInfo_Entrypoint proto.InternalMessageInfo

func (m *Entrypoint) GetInteractive() bool {
	if m != nil {
		return m.Interactive
	}
	return false
}

func (m *Entrypoint) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *Entrypoint) GetInterpreter() []string {
	if m != nil {
		return m.Interpreter
	}
	return nil
}

func (m *Entrypoint) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type Environment struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Environment) Reset()         { *m = Environment{} }
func (m *Environment) String() string { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()    {}
func (*Environment) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{4}
}

func (m *Environment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Environment.Unmarshal(m, b)
}
func (m *Environment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Environment.Marshal(b, m, deterministic)
}
func (m *Environment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environment.Merge(m, src)
}
func (m *Environment) XXX_Size() int {
	return xxx_messageInfo_Environment.Size(m)
}
func (m *Environment) XXX_DiscardUnknown() {
	xxx_messageInfo_Environment.DiscardUnknown(m)
}

var xxx_messageInfo_Environment proto.InternalMessageInfo

func (m *Environment) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Environment) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Volume struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Readonly             bool     `protobuf:"varint,3,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{5}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Volume) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Volume) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type Device struct {
	CgroupRule           string   `protobuf:"bytes,1,opt,name=cgroup_rule,json=cgroupRule,proto3" json:"cgroup_rule,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Permissions          string   `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{6}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetCgroupRule() string {
	if m != nil {
		return m.CgroupRule
	}
	return ""
}

func (m *Device) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Device) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Device) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

type Port struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Published            string   `protobuf:"bytes,2,opt,name=published,proto3" json:"published,omitempty"`
	Protocol             string   `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	HostIp               string   `protobuf:"bytes,4,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{7}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Port) GetPublished() string {
	if m != nil {
		return m.Published
	}
	return ""
}

func (m *Port) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Port) GetHostIp() string {
	if m != nil {
		return m.HostIp
	}
	return ""
}

type ClientOptions struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	CaFile               string   `protobuf:"bytes,3,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`
	CertFile             string   `protobuf:"bytes,4,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	KeyFile              string   `protobuf:"bytes,5,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientOptions) Reset()         { *m = ClientOptions{} }
func (m *ClientOptions) String() string { return proto.CompactTextString(m) }
func (*ClientOptions) ProtoMessage()    {}
func (*ClientOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{8}
}

func (m *ClientOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientOptions.Unmarshal(m, b)
}
func (m *ClientOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientOptions.Marshal(b, m, deterministic)
}
func (m *ClientOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientOptions.Merge(m, src)
}
func (m *ClientOptions) XXX_Size() int {
	return xxx_messageInfo_ClientOptions.Size(m)
}
func (m *ClientOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ClientOptions proto.InternalMessageInfo

func (m *ClientOptions) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClientOptions) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ClientOptions) GetCaFile() string {
	if m != nil {
		return m.CaFile
	}
	return ""
}

func (m *ClientOptions) GetCertFile() string {
	if m != nil {
		return m.CertFile
	}
	return ""
}

func (m *ClientOptions) GetKeyFile() string {
	if m != nil {
		return m.KeyFile
	}
	return ""
}

type CommandInfo struct {
	Use                  string         `protobuf:"bytes,1,opt,name=use,proto3" json:"use,omitempty"`
	Short                string         `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	TraverseChildren     bool           `protobuf:"varint,3,opt,name=traverseChildren,proto3" json:"traverseChildren,omitempty"`
	SilenceUsage         bool           `protobuf:"varint,4,opt,name=silenceUsage,proto3" json:"silenceUsage,omitempty"`
	Subcommands          []*CommandInfo `protobuf:"bytes,5,rep,name=subcommands,proto3" json:"subcommands,omitempty"`
	ExecutePath          []string       `protobuf:"bytes,6,rep,name=executePath,proto3" json:"executePath,omitempty"`
	ArgsFunc             bool           `protobuf:"varint,7,opt,name=argsFunc,proto3" json:"argsFunc,omitempty"`
	RunFunc              bool           `protobuf:"varint,8,opt,name=runFunc,proto3" json:"runFunc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommandInfo) Reset()         { *m = CommandInfo{} }
func (m *CommandInfo) String() string { return proto.CompactTextString(m) }
func (*CommandInfo) ProtoMessage()    {}
func (*CommandInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{9}
}

func (m *CommandInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandInfo.Unmarshal(m, b)
}
func (m *CommandInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandInfo.Marshal(b, m, deterministic)
}
func (m *CommandInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandInfo.Merge(m, src)
}
func (m *CommandInfo) XXX_Size() int {
	return xxx_messageInfo_CommandInfo.Size(m)
}
func (m *CommandInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommandInfo proto.InternalMessageInfo

func (m *CommandInfo) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *CommandInfo) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *CommandInfo) GetTraverseChildren() bool {
	if m != nil {
		return m.TraverseChildren
	}
	return false
}

func (m *CommandInfo) GetSilenceUsage() bool {
	if m != nil {
		return m.SilenceUsage
	}
	return false
}

func (m *CommandInfo) GetSubcommands() []*CommandInfo {
	if m != nil {
		return m.Subcommands
	}
	return nil
}

func (m *CommandInfo) GetExecutePath() []string {
	if m != nil {
		return m.ExecutePath
	}
	return nil
}

func (m *CommandInfo) GetArgsFunc() bool {
	if m != nil {
		return m.ArgsFunc
	}
	return false
}

func (m *CommandInfo) GetRunFunc() bool {
	if m != nil {
		return m.RunFunc
	}
	return false
}

type CommandArguments struct {
	Path                 []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandArguments) Reset()         { *m = CommandArguments{} }
func (m *CommandArguments) String() string { return proto.CompactTextString(m) }
func (*CommandArguments) ProtoMessage()    {}
func (*CommandArguments) Descriptor() ([]byte, []int) {
	return fileDescriptor_6579d14f41ea6320, []int{10}
}

func (m *CommandArguments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandArguments.Unmarshal(m, b)
}
func (m *CommandArguments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandArguments.Marshal(b, m, deterministic)
}
func (m *CommandArguments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandArguments.Merge(m, src)
}
func (m *CommandArguments) XXX_Size() int {
	return xxx_messageInfo_CommandArguments.Size(m)
}
func (m *CommandArguments) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandArguments.DiscardUnknown(m)
}

var xxx_messageInfo_CommandArguments proto.InternalMessageInfo

func (m *CommandArguments) GetPath() []string {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *CommandArguments) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "types.Empty")
	proto.RegisterType((*ContainerId)(nil), "types.ContainerId")
	proto.RegisterType((*Backdrop)(nil), "types.Backdrop")
	proto.RegisterType((*Entrypoint)(nil), "types.Entrypoint")
	proto.RegisterType((*Environment)(nil), "types.Environment")
	proto.RegisterType((*Volume)(nil), "types.Volume")
	proto.RegisterType((*Device)(nil), "types.Device")
	proto.RegisterType((*Port)(nil), "types.Port")
	proto.RegisterType((*ClientOptions)(nil), "types.ClientOptions")
	proto.RegisterType((*CommandInfo)(nil), "types.CommandInfo")
	proto.RegisterType((*CommandArguments)(nil), "types.CommandArguments")
}

func init() { proto.RegisterFile("pkg/types/types.proto", fileDescriptor_6579d14f41ea6320) }

var fileDescriptor_6579d14f41ea6320 = []byte{
	// 872 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5f, 0x8f, 0xdb, 0x44,
	0x10, 0x57, 0x92, 0x4b, 0xe2, 0x8c, 0xef, 0xca, 0xb1, 0x14, 0xea, 0x1e, 0x45, 0x04, 0x4b, 0x88,
	0x08, 0xb5, 0x45, 0x1c, 0x20, 0x04, 0x6f, 0xe5, 0xae, 0x45, 0xf7, 0x02, 0x27, 0x8b, 0xf2, 0x1a,
	0xed, 0xd9, 0x73, 0xce, 0x2a, 0xce, 0xae, 0xd9, 0x5d, 0x07, 0x22, 0xde, 0x79, 0xe4, 0x05, 0xbe,
	0x02, 0x5f, 0x80, 0x4f, 0x88, 0x66, 0x77, 0xed, 0xb3, 0x29, 0x48, 0x7d, 0xb1, 0x76, 0x7e, 0xf3,
	0xe7, 0x37, 0x3b, 0x33, 0x3b, 0x86, 0xb7, 0xeb, 0x6d, 0xf9, 0x89, 0x3d, 0xd4, 0x68, 0xfc, 0xf7,
	0x69, 0xad, 0x95, 0x55, 0x6c, 0xea, 0x84, 0x74, 0x0e, 0xd3, 0xe7, 0xbb, 0xda, 0x1e, 0xd2, 0xf7,
	0x20, 0xbe, 0x50, 0xd2, 0x72, 0x21, 0x51, 0x5f, 0x15, 0xec, 0x1e, 0x8c, 0x45, 0x91, 0x8c, 0x96,
	0xa3, 0xd5, 0x22, 0x1b, 0x8b, 0x22, 0xfd, 0x6b, 0x02, 0xd1, 0x37, 0x3c, 0xdf, 0x16, 0x5a, 0xd5,
	0x8c, 0xc1, 0x91, 0xe4, 0x3b, 0x0c, 0x6a, 0x77, 0x66, 0x09, 0xcc, 0x79, 0x25, 0xb8, 0x41, 0x93,
	0x8c, 0x97, 0x93, 0xd5, 0x22, 0x6b, 0x45, 0xf6, 0x21, 0xdc, 0xcb, 0xdb, 0xc8, 0x6b, 0xe7, 0x37,
	0x71, 0x7e, 0x27, 0x1d, 0xfa, 0x1d, 0x05, 0x78, 0x08, 0x91, 0xd8, 0xf1, 0x12, 0xd7, 0xa2, 0x48,
	0x8e, 0x9c, 0xc1, 0xdc, 0xc9, 0x57, 0x05, 0xfb, 0x14, 0x00, 0xa5, 0xd5, 0x87, 0x5a, 0x09, 0x69,
	0x93, 0xe9, 0x72, 0xb4, 0x8a, 0xcf, 0xdf, 0x7c, 0xea, 0x6f, 0xf3, 0xbc, 0x53, 0x64, 0x3d, 0x23,
	0xf6, 0x39, 0xc4, 0x28, 0xf7, 0x42, 0x2b, 0xb9, 0x43, 0x69, 0x93, 0xd9, 0x72, 0xb2, 0x8a, 0xcf,
	0x59, 0xe7, 0xd3, 0x69, 0xb2, 0xbe, 0x19, 0xfb, 0x08, 0xe6, 0x7b, 0x55, 0x35, 0x3b, 0x34, 0xc9,
	0xdc, 0x79, 0x9c, 0x04, 0x8f, 0x1f, 0x1d, 0x9a, 0xb5, 0x5a, 0x32, 0x2c, 0x70, 0x2f, 0x72, 0x34,
	0x49, 0x34, 0x30, 0xbc, 0x74, 0x68, 0xd6, 0x6a, 0xd9, 0x07, 0x30, 0xad, 0x95, 0xb6, 0x26, 0x59,
	0x38, 0xb3, 0x38, 0x98, 0x5d, 0x2b, 0x6d, 0x33, 0xaf, 0xa1, 0x6a, 0x36, 0x06, 0x75, 0x02, 0xbe,
	0x9a, 0x74, 0x66, 0xef, 0x43, 0xfc, 0xb3, 0xd2, 0x5b, 0x21, 0xcb, 0x75, 0x21, 0x74, 0x12, 0x3b,
	0x15, 0x04, 0xe8, 0x52, 0x68, 0xf6, 0x0e, 0xcc, 0xb8, 0xb5, 0x3c, 0xdf, 0x24, 0xc7, 0xcb, 0xd1,
	0x2a, 0xca, 0x82, 0x94, 0xfe, 0x36, 0x02, 0xb8, 0x2b, 0x09, 0x5b, 0x42, 0x2c, 0xa4, 0x45, 0xcd,
	0x73, 0x2b, 0xf6, 0xbe, 0x61, 0x51, 0xd6, 0x87, 0x28, 0x90, 0xc9, 0xb5, 0xa8, 0x6d, 0x32, 0x76,
	0x24, 0x41, 0xea, 0x3c, 0x6b, 0x8d, 0x16, 0x75, 0x32, 0x71, 0x3d, 0xed, 0x43, 0xec, 0x11, 0x2c,
	0xb8, 0x2e, 0x1b, 0x2a, 0x9c, 0x49, 0x8e, 0x9c, 0xfe, 0x0e, 0x48, 0xbf, 0x80, 0xb8, 0x57, 0x66,
	0x76, 0x0a, 0x93, 0x2d, 0x1e, 0xc2, 0xc4, 0xd0, 0x91, 0xdd, 0x87, 0xe9, 0x9e, 0x57, 0x0d, 0x06,
	0x5e, 0x2f, 0xa4, 0x3f, 0xc0, 0xcc, 0xd7, 0xda, 0x25, 0xa6, 0x1a, 0x9d, 0xb7, 0x63, 0x16, 0x24,
	0xc2, 0x2d, 0xd7, 0x25, 0x76, 0x09, 0x7b, 0x89, 0x9d, 0x41, 0xa4, 0x91, 0x17, 0x4a, 0x56, 0x07,
	0x37, 0x60, 0x51, 0xd6, 0xc9, 0xe9, 0xaf, 0x30, 0xf3, 0x8d, 0xa1, 0xc2, 0xe6, 0xa5, 0x56, 0x4d,
	0xbd, 0xd6, 0x4d, 0xd5, 0x86, 0x06, 0x0f, 0x65, 0x4d, 0xd5, 0xa7, 0x1d, 0xff, 0x0f, 0xed, 0x64,
	0x40, 0xbb, 0x84, 0xb8, 0x46, 0xbd, 0x13, 0xc6, 0x08, 0x25, 0x4d, 0x98, 0xdc, 0x3e, 0x94, 0xfe,
	0x04, 0x47, 0xd4, 0xee, 0x5e, 0x84, 0xd1, 0x20, 0xc2, 0x23, 0x58, 0xd4, 0xcd, 0x4d, 0x25, 0xcc,
	0x06, 0x8b, 0x40, 0x7a, 0x07, 0xd0, 0xb5, 0xdc, 0x83, 0xcd, 0x55, 0x15, 0x98, 0x3b, 0x99, 0x3d,
	0x80, 0xf9, 0x46, 0x19, 0xbb, 0x16, 0x75, 0xe0, 0x9d, 0x91, 0x78, 0x55, 0xa7, 0xbf, 0x8f, 0xe0,
	0xe4, 0xa2, 0x12, 0x28, 0xed, 0xf7, 0xb5, 0xa5, 0x24, 0xe8, 0x79, 0xee, 0x51, 0x53, 0x42, 0x81,
	0xbd, 0x15, 0x69, 0xfc, 0xc8, 0x2b, 0x30, 0xbb, 0x33, 0x05, 0xce, 0xf9, 0xfa, 0x56, 0x54, 0xed,
	0x5b, 0x9d, 0xe5, 0xfc, 0x85, 0xa8, 0x90, 0xbd, 0x0b, 0x8b, 0x1c, 0xb5, 0xf5, 0x2a, 0xcf, 0x19,
	0x11, 0xe0, 0x94, 0x0f, 0x21, 0xda, 0xe2, 0xc1, 0xeb, 0xa6, 0x9e, 0x64, 0x8b, 0x07, 0x52, 0xa5,
	0x7f, 0x8c, 0x69, 0xbd, 0xec, 0x76, 0x5c, 0x16, 0x57, 0xf2, 0x56, 0xd1, 0x38, 0x34, 0xa6, 0x2d,
	0x3f, 0x1d, 0x69, 0x1c, 0xcc, 0x46, 0xe9, 0x36, 0x0f, 0x2f, 0xb0, 0x8f, 0xe1, 0xd4, 0x6a, 0x4e,
	0xa9, 0xe2, 0xc5, 0x46, 0x54, 0x85, 0x46, 0x19, 0x9a, 0xfb, 0x0a, 0xce, 0x52, 0x38, 0x36, 0xa2,
	0x42, 0x99, 0xe3, 0x4b, 0xc3, 0x4b, 0x9f, 0x5e, 0x94, 0x0d, 0x30, 0x5a, 0x0b, 0xa6, 0xb9, 0xc9,
	0x7d, 0x26, 0x26, 0x99, 0x0e, 0xd6, 0x42, 0x2f, 0xc1, 0xac, 0x6f, 0x46, 0x3d, 0xc6, 0x5f, 0x30,
	0x6f, 0x2c, 0x5e, 0x73, 0xbb, 0x71, 0xcb, 0x64, 0x91, 0xf5, 0x21, 0xea, 0x12, 0xd7, 0xa5, 0x79,
	0xd1, 0xc8, 0x3c, 0x99, 0xfb, 0xe1, 0x6b, 0x65, 0x2a, 0xbd, 0x6e, 0xa4, 0x53, 0x45, 0x4e, 0xd5,
	0x8a, 0xe9, 0xd7, 0x70, 0x1a, 0x38, 0x9f, 0xb5, 0xef, 0x86, 0xda, 0x51, 0x13, 0xc9, 0xc8, 0x91,
	0xb8, 0x33, 0x61, 0x14, 0x2d, 0x2c, 0x56, 0x77, 0x3e, 0xff, 0x9b, 0x5a, 0xac, 0xe4, 0xad, 0x28,
	0x1b, 0xcd, 0xa9, 0xc7, 0xec, 0x2b, 0x38, 0xfd, 0x16, 0xed, 0xb0, 0xed, 0x6f, 0x84, 0xab, 0xb5,
	0xab, 0xfb, 0xec, 0x7e, 0x7b, 0xd7, 0x81, 0xd9, 0x97, 0xf0, 0xd6, 0xcb, 0xba, 0xe0, 0x16, 0x87,
	0x11, 0x5f, 0xf1, 0xfe, 0x37, 0xc0, 0x9e, 0xc0, 0xe2, 0x5a, 0xab, 0xbd, 0xf0, 0x93, 0xd4, 0xd5,
	0xb1, 0xfb, 0x8f, 0x9c, 0x1d, 0xb7, 0x2b, 0x97, 0x7e, 0x32, 0xe7, 0x7f, 0x8e, 0x60, 0x1e, 0x6e,
	0xcc, 0x1e, 0x43, 0x74, 0x89, 0xb4, 0x6c, 0x6e, 0x90, 0x0d, 0xac, 0xce, 0xfe, 0xa3, 0x1f, 0xec,
	0x31, 0x4c, 0xb2, 0x46, 0xb2, 0x07, 0x43, 0x55, 0x57, 0xb6, 0x21, 0x0f, 0x7b, 0x02, 0x47, 0xcf,
	0x74, 0x69, 0x5e, 0xd3, 0xfc, 0x66, 0xe6, 0x5e, 0xd4, 0x67, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x61, 0xdb, 0xf1, 0x29, 0x2b, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfigurationClient is the client API for Configuration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigurationClient interface {
	GetClientOptions(ctx context.Context, in *Backdrop, opts ...grpc.CallOption) (*ClientOptions, error)
	UpdateConfiguration(ctx context.Context, in *Backdrop, opts ...grpc.CallOption) (*Backdrop, error)
	Provision(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error)
}

type configurationClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigurationClient(cc grpc.ClientConnInterface) ConfigurationClient {
	return &configurationClient{cc}
}

func (c *configurationClient) GetClientOptions(ctx context.Context, in *Backdrop, opts ...grpc.CallOption) (*ClientOptions, error) {
	out := new(ClientOptions)
	err := c.cc.Invoke(ctx, "/types.Configuration/GetClientOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) UpdateConfiguration(ctx context.Context, in *Backdrop, opts ...grpc.CallOption) (*Backdrop, error) {
	out := new(Backdrop)
	err := c.cc.Invoke(ctx, "/types.Configuration/UpdateConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationClient) Provision(ctx context.Context, in *ContainerId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.Configuration/Provision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServer is the server API for Configuration service.
type ConfigurationServer interface {
	GetClientOptions(context.Context, *Backdrop) (*ClientOptions, error)
	UpdateConfiguration(context.Context, *Backdrop) (*Backdrop, error)
	Provision(context.Context, *ContainerId) (*Empty, error)
}

// UnimplementedConfigurationServer can be embedded to have forward compatible implementations.
type UnimplementedConfigurationServer struct {
}

func (*UnimplementedConfigurationServer) GetClientOptions(ctx context.Context, req *Backdrop) (*ClientOptions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientOptions not implemented")
}
func (*UnimplementedConfigurationServer) UpdateConfiguration(ctx context.Context, req *Backdrop) (*Backdrop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfiguration not implemented")
}
func (*UnimplementedConfigurationServer) Provision(ctx context.Context, req *ContainerId) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Provision not implemented")
}

func RegisterConfigurationServer(s *grpc.Server, srv ConfigurationServer) {
	s.RegisterService(&_Configuration_serviceDesc, srv)
}

func _Configuration_GetClientOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Backdrop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).GetClientOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Configuration/GetClientOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).GetClientOptions(ctx, req.(*Backdrop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_UpdateConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Backdrop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).UpdateConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Configuration/UpdateConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).UpdateConfiguration(ctx, req.(*Backdrop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Configuration_Provision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServer).Provision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Configuration/Provision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServer).Provision(ctx, req.(*ContainerId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Configuration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Configuration",
	HandlerType: (*ConfigurationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClientOptions",
			Handler:    _Configuration_GetClientOptions_Handler,
		},
		{
			MethodName: "UpdateConfiguration",
			Handler:    _Configuration_UpdateConfiguration_Handler,
		},
		{
			MethodName: "Provision",
			Handler:    _Configuration_Provision_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}

// CommandClient is the client API for Command service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandClient interface {
	Describe(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CommandInfo, error)
	Run(ctx context.Context, in *CommandArguments, opts ...grpc.CallOption) (*Empty, error)
	Args(ctx context.Context, in *CommandArguments, opts ...grpc.CallOption) (*Empty, error)
}

type commandClient struct {
	cc grpc.ClientConnInterface
}

func NewCommandClient(cc grpc.ClientConnInterface) CommandClient {
	return &commandClient{cc}
}

func (c *commandClient) Describe(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CommandInfo, error) {
	out := new(CommandInfo)
	err := c.cc.Invoke(ctx, "/types.Command/Describe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) Run(ctx context.Context, in *CommandArguments, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.Command/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) Args(ctx context.Context, in *CommandArguments, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/types.Command/Args", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandServer is the server API for Command service.
type CommandServer interface {
	Describe(context.Context, *Empty) (*CommandInfo, error)
	Run(context.Context, *CommandArguments) (*Empty, error)
	Args(context.Context, *CommandArguments) (*Empty, error)
}

// UnimplementedCommandServer can be embedded to have forward compatible implementations.
type UnimplementedCommandServer struct {
}

func (*UnimplementedCommandServer) Describe(ctx context.Context, req *Empty) (*CommandInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Describe not implemented")
}
func (*UnimplementedCommandServer) Run(ctx context.Context, req *CommandArguments) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedCommandServer) Args(ctx context.Context, req *CommandArguments) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Args not implemented")
}

func RegisterCommandServer(s *grpc.Server, srv CommandServer) {
	s.RegisterService(&_Command_serviceDesc, srv)
}

func _Command_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Command/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Describe(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandArguments)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Command/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Run(ctx, req.(*CommandArguments))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_Args_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandArguments)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Args(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Command/Args",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Args(ctx, req.(*CommandArguments))
	}
	return interceptor(ctx, in, info, handler)
}

var _Command_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Command",
	HandlerType: (*CommandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Describe",
			Handler:    _Command_Describe_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _Command_Run_Handler,
		},
		{
			MethodName: "Args",
			Handler:    _Command_Args_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}
