syntax = "proto3";
package types;

message Empty {}

message ContainerId {
  string id = 1;
}

message Backdrop {
  string name = 1;
  repeated string aliases = 2;
  string container_name = 3;

  string image_id = 4;
  Entrypoint entrypoint = 5;

  repeated Environment environment = 6;
  repeated Volume volumes = 7;
  repeated Device devices = 8;
  repeated Port ports = 9;

  string user = 10;
  string working_dir = 11;

  bool attach = 12;
}

message Entrypoint {
  bool interactive = 1;
  string script = 2;
  repeated string interpreter = 3;
  repeated string arguments = 4;
}

message Environment {
  string key = 1;
  string value = 2;
}

message Volume {
  string source = 1;
  string target = 2;
  bool readonly = 3;
}

message Device {
  string cgroup_rule = 1;
  string source = 2;
  string target = 3;
  string permissions = 4;
}

message Port {
  string target = 1;
  string published = 2;
  string protocol = 3;
  string host_ip = 4;
}

message ClientOptions {
  string version   = 1;
  string host      = 2;
  string ca_file   = 3;
  string cert_file = 4;
  string key_file  = 5;
}

message CommandInfo {
  string use = 1;
  string short = 2;

  bool traverseChildren = 3;
  bool silenceUsage = 4;

  repeated CommandInfo subcommands = 5;

  repeated string executePath = 6;
  bool argsFunc = 7;
  bool runFunc = 8;
}

message CommandArguments {
  repeated string path = 1;
  repeated string args = 2;
}

service Configuration {
  rpc GetClientOptions(Backdrop) returns (ClientOptions);
  rpc UpdateConfiguration(Backdrop) returns (Backdrop);
  rpc Provision(ContainerId) returns (Empty);
}

service Command {
  rpc Describe(Empty) returns (CommandInfo);
  rpc Run(CommandArguments) returns (Empty);
  rpc Args(CommandArguments) returns (Empty);
}
